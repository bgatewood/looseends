= form_with model: @volunteer, url: volunteer_path, html: { class: 'form' } do |form|
  = render "error_messages", resource: @volunteer
  .row.my-2
    .col-3
      = form.label 'Chosen or preferred Name', class: 'form-label required'
      = form.text_field :chosen_name, class: 'form-control'
    .col-3
      = form.label 'Pronouns', class: 'form-label'
      = form.text_field :pronouns, class: 'form-control'
  .row.my-2
    .col-6
      = form.label 'Tell us about yourself.', class: 'form-label required'
      = form.text_area :description, size: "60x4", class: 'form-control'
  .row.my-2
    - if @volunteer.picture.representable?
      .form-image
        = image_tag @volunteer.picture.representation( resize_to_limit: [200, 200])
    .col-6
      = form.label 'Picture', class: 'form-label required'
      = form.file_field :picture, class: 'form-control', accept: "image/png,image/gif,image/jpeg,image/webp"

  .my-4
    %h5 Your Mailing Address
    .form-info Where will you receive an unfinished project?
    .row.mb-3
      .col-8
        %ul.nav.nav-tabs
          %li.nav-item
            %button#usButton{:class => "nav-link #{'active' if form.object.country == 'US' || form.object.country.blank?}", :onclick => "setCountry('us')", :type => "button"} US
          %li.nav-item
            %button#caButton{:class => "nav-link #{'active' if form.object.country == 'CA'}", :onclick => "setCountry('ca')", :type => "button"} Canada
          %li.nav-item
            %button#otButton{:class => "nav-link #{'active' if form.object.country.present? && form.object.country != 'US' && form.object.country != 'CA'}", :onclick => "setCountry('ot')", :type => "button"} Not US or Canada

    #country_ui.row
      .col-4
        = form.label 'Country', class: 'form-label required'
        = form.text_field :country, class: 'form-control'
    .row.my-2
      .col-8
        = form.label 'Street', class: 'form-label required'
        = form.text_field :street, class: 'form-control'
    .row.my-2
      .col-8
        = form.label 'Line 2', class: 'form-label col-2'
        = form.text_field :street_2, class: 'form-control'
    .row.my-2
      .col-3
        = form.label 'City', class: 'form-label col-2 required'
        = form.text_field :city, class: 'form-control'
      #usState.col-3
        = form.label 'State', class: 'form-label required'
        = form.select :state, STATES,                      |
          { include_blank: true }, { class: 'form-select' } |
      #caState.col-3
        = form.label 'Province', class: 'form-label required'
        = form.select :state, PROVINCES, { include_blank: true }, { class: 'form-select' }
      #otState.col-3
        = form.label 'State/Province', class: 'form-label required'
        = form.text_field :state, class: 'form-control', id: 'state_ot'
      .col-2
        = form.label 'Postal code', class: 'form-label required'
        = form.text_field :postal_code, class: 'form-control'
  - if Skill.any?
    .row.my-2
      .col
        = form.label 'Skill Assessment', class: 'form-label required'
        .form-info Rate yourself and add any other information you like!

        = form.fields_for :assessments, @assessments do |assessment_form|

          .row
            .col-2.my-1
              = assessment_form.label assessment_form.object.skill.name, class: 'form-label'
              - if assessment_form.object.skill.description.present?
                (#{assessment_form.object.skill.description})
            .col-2.my-1
              = assessment_form.hidden_field :skill_id, value: assessment_form.object.skill_id
              = assessment_form.select :rating, [['', '0'],['Beginner', '1'],['Intermediate', '2'],['Expert', '3']], {}, { class: 'form-select' }
            .col-4.my-1
              = assessment_form.text_field :description, class: 'ml-2 form-control', placeholder: "Tell us more..."
  .row.my-2
    .col-6
      = form.label 'Other Skills?', class: 'form-label'
      .form-info Are there other crafts you love to do that we should know about?
      = form.text_area :other_skills, size: "60x3", class: 'form-control'
  .row.my-2
    .col-2
      = form.label 'What is your dominant hand?', class: 'form-label required'
      .form-info Lefty or Righty?
      = form.select :dominant_hand, ['Lefty', 'Righty'], { include_blank: true}, { class: 'form-select' }
  - if Product.any?
    .row.my-2
      .col
        = form.label 'What do you like to make?', class: 'form-label'
        = form.collection_check_boxes :product_ids, Product.all, :id, :name do |b|
          .row
            = b.label(class: 'form-label') do
              = b.check_box
              = b.object.name
              - if b.object.description.present?
                (#{b.object.description})
  .row.my-2
    .col-6
      = form.label 'Tell us your favorite thing to make', class: 'form-label'
      .form-info No parent has a favorite child, or do they?
      = form.text_area :other_favorites, size: "60x3", class: 'form-control'
  .row.my-2
    .col-6
      = form.label 'Finished Projects', class: 'form-label'
      .form-info Please upload photos of projects you've done that you like.
      = form.file_field :append_finished_projects, class: 'form-control', accept: "image/png,image/gif,image/jpeg,image/webp",  :multiple => true
      - form.object.finished_projects.each do |image|
        = image_tag image.representation( resize_to_limit: [100, 100]), class: 'thumbnail'
  .row.my-2
    .col-6
      = form.label 'Never Again!', class: 'form-label'
      .form-info Are there techniques or projects you do not wish to do ever again?
      = form.text_area :dislikes, size: "60x3", class: 'form-control'
  .row.my-2
    .col-6
      = form.label 'Sensitivities', class: 'form-label'
      .form-info If we find out an unfinished project was in a house with a smoker or pets, do you want to avoid this project?
      .row
        %label.form-label
          = form.check_box :no_smoke
          No smoke, please.
      .row
        %label.form-label
          = form.check_box :no_cats
          No cats, please.
      .row
        %label.form-label
          = form.check_box :no_dogs
          No dogs, please.
  .row.my-2
    .col-6
      = form.label 'Social Media', class: 'form-label'
      .form-info Use this space to share your Ravelry, Instagram or Facebook account (optional).
      = form.text_area :social_media, size: "60x3", class: 'form-control'
  .row.my-2
    .col-6
      .form-info
        Can we post a welcome post about you on our social media? We will use the picture from above.
        There's no obligation to do this but we'd love to show you off.
      .row.my-2
      = form.label 'can_publicize', class: 'form-label' do
        = form.check_box :can_publicize
        It's OK to post about me on social media!
  - if !@volunteer.persisted?
    .row.my-2
      .col-8
        = form.label 'terms_of_use', class: 'form-label required'
        %label
          = form.check_box :terms_of_use
          By checking this box I hold harmless Loose Ends Project from any and all claims, lawsuits, demands, causes of action, liability, loss, damage, and/or injury of any kind.
  = form.submit 'Submit', class: "btn btn-primary"

:javascript
  const prefixes = ['us', 'ca', 'ot']

  const selectButton = (selected) => {
      prefixes.forEach(p => {
          const button = document.querySelector('#' + p + 'Button')
          if (selected === p) {
              button.classList.add('active')
          } else {
              button.classList.remove('active')
          }
      })
  };

  const showState = (selected) => {
      prefixes.forEach(p => {
          const state = document.querySelector('#' + p + 'State')
          if (selected === p) {
              state.style.display = "block"
              state.querySelector('select, input').disabled = false;
          } else {
              state.style.display = "none"
              state.querySelector('select, input').disabled = true;
              state.querySelector('select, input').value = '';
          }
      })
  };

  const showCountry = (selected) => {
      const countryinput = document.querySelector('#volunteer_country');
      const countryField = document.querySelector('#country_ui');
      if (selected === 'us') {
          countryinput.value = 'US';
          countryField.style.display = "none"
      } else if (selected === 'ca') {
          countryinput.value = 'CA';
          countryField.style.display = "none"
      } else {
          countryinput.value = '';
          countryField.style.display = "block"
      }
  }

  const setCountry = (val) => {
      if (prefixes.includes(val)) {
          selectButton(val);
          showState(val);
          showCountry(val);
      } else if (val) {
          setCountry('ot')
      } else {
          setCountry('us')
      }

  }
  document.addEventListener("turbo:load", () => {
      setCountry('#{@volunteer.country.present? ? @volunteer.country&.downcase : ''}')
  })
