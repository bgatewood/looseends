= form_with model: @project, html: { class: 'form', data: { turbo: false } } do |form|
  = render "error_messages", resource: @project
  .my-4
    %h5 Your Mailing Address
    .form-info After it's finished, we'll send it back here
    .row.mb-3
      .col-8
        %ul.nav.nav-tabs
          %li.nav-item
            %button#usButton{:class => "nav-link #{'active' if form.object.country == 'US' || form.object.country.blank?}", :onclick => "setCountry('us')", :type => "button"} US
          %li.nav-item
            %button#caButton{:class => "nav-link #{'active' if form.object.country == 'CA'}", :onclick => "setCountry('ca')", :type => "button"} Canada
          %li.nav-item
            %button#otButton{:class => "nav-link #{'active' if form.object.country.present? && form.object.country != 'US' && form.object.country != 'CA'}", :onclick => "setCountry('ot')", :type => "button"} Not US or Canada
    #country_ui.row{ class: ("hidden" if form.object.country == 'US' || form.object.country == 'CA') }
      .col-4
        = form.label 'Country', class: 'form-label required'
        = form.text_field :country, class: 'form-control'
    .row.my-2
      .col-8
        = form.label 'Street', class: 'form-label required'
        = form.text_field :street, class: 'form-control'
    .row.my-2
      .col-8
        = form.label 'Line 2', class: 'form-label col-2'
        = form.text_field :street_2, class: 'form-control'
    .row.my-2
      .col-3
        = form.label 'City', class: 'form-label col-2 required'
        = form.text_field :city, class: 'form-control'
      #usState.col-3{ class: ("hidden" unless form.object.country == 'US') }
        = form.label 'State', class: 'form-label required'
        = form.select :state, STATES,                      |
          { include_blank: true }, { class: 'form-select' } |
      #caState.col-3{ class: ("hidden" unless form.object.country == 'CA') }
        = form.label 'Province', class: 'form-label required'
        = form.select :state, PROVINCES, { include_blank: true }, { class: 'form-select' }
      #otState.col-3{ class: ("hidden" if form.object.country == 'US' || form.object.country == 'CA') }
        = form.label 'State/Province', class: 'form-label required'
        = form.text_field :state, class: 'form-control', id: 'state_ot'
      .col-2
        = form.label 'Postal code', class: 'form-label required'
        = form.text_field :postal_code, class: 'form-control'
  .form-actions
    = form.submit 'Submit Address', class: "btn btn-primary"
    = link_to "Cancel", @project, class: "btn btn-link"

:javascript
  const prefixes = ['us', 'ca', 'ot']

  const selectButton = (selected) => {
      prefixes.forEach(p => {
          const button = document.querySelector('#' + p + 'Button')
          if (selected === p) {
              button.classList.add('active')
          } else {
              button.classList.remove('active')
          }
      })
  };

  const showState = (selected) => {
      prefixes.forEach(p => {
          const state = document.querySelector('#' + p + 'State')
          if (selected === p) {
              state.style.display = "block"
              state.querySelector('select, input').disabled = false;
          } else {
              state.style.display = "none"
              state.querySelector('select, input').disabled = true;
              state.querySelector('select, input').value = '';
          }
      })
  };

  const showCountry = (selected) => {
      const countryinput = document.querySelector('#project_country');
      const countryField = document.querySelector('#country_ui');
      if (selected === 'us') {
          countryinput.value = 'US';
          countryField.style.display = "none"
      } else if (selected === 'ca') {
          countryinput.value = 'CA';
          countryField.style.display = "none"
      } else {
          countryinput.value = '';
          countryField.style.display = "block"
      }
  }

  const setCountry = (val) => {
      if (prefixes.includes(val)) {
          selectButton(val);
          showState(val);
          showCountry(val);
      } else if (val) {
          setCountry('ot')
      } else {
          setCountry('us')
      }

  }
  document.addEventListener("turbo:load", () => {
      setCountry('#{@project.country.present? ? @project.country&.downcase : ''}')
  })
