= form_with model: @project, html: { class: 'form', data: { turbo: false } } do |form|
  = render "error_messages", resource: @project
  .row
    .col-4
      = form.label 'Give this project a name', class: 'form-label required'
      = form.text_field :name, class: 'form-control'
  .my-4
    %h5 Your Mailing Address
    .form-info After it's finished, we'll send it back here
    .row.mb-3
      .col-8
        %ul.nav.nav-tabs
          %li.nav-item
            %button#usButton{:class => "nav-link #{'active' if form.object.country == 'US' || form.object.country.blank?}", :onclick => "setCountry('us')", :type => "button"} US
          %li.nav-item
            %button#caButton{:class => "nav-link #{'active' if form.object.country == 'CA'}", :onclick => "setCountry('ca')", :type => "button"} Canada
          %li.nav-item
            %button#otButton{:class => "nav-link #{'active' if form.object.country.present? && form.object.country != 'US' && form.object.country != 'CA'}", :onclick => "setCountry('ot')", :type => "button"} Not US or Canada
    #country_ui.row
      .col-4
        = form.label 'Country', class: 'form-label required'
        = form.text_field :country, class: 'form-control'
    .row.my-2
      .col-8
        = form.label 'Street', class: 'form-label required'
        = form.text_field :street, class: 'form-control'
    .row.my-2
      .col-8
        = form.label 'Line 2', class: 'form-label col-2'
        = form.text_field :street_2, class: 'form-control'
    .row.my-2
      .col-3
        = form.label 'City', class: 'form-label col-2 required'
        = form.text_field :city, class: 'form-control'
      #usState.col-3
        = form.label 'State', class: 'form-label required'
        = form.select :state, STATES,                      |
          { include_blank: true }, { class: 'form-select' } |
      #caState.col-3
        = form.label 'Province', class: 'form-label required'
        = form.select :state, PROVINCES, { include_blank: true }, { class: 'form-select' }
      #otState.col-3
        = form.label 'State/Province', class: 'form-label required'
        = form.text_field :state, class: 'form-control', id: 'state_ot'
      .col-2
        = form.label 'Postal code', class: 'form-label required'
        = form.text_field :postal_code, class: 'form-control'
  .page-section
    %h5 The Project
    .row.mb-2
      .col-6
        = form.label 'What type of craft project are you submitting?', class: 'form-label required'
        .form-info Knit, Crochet, Quilt. Do you know what it is?
        = form.text_field :craft_type, class: 'form-control'
    .row.mb-2
      .col-6
        = form.label 'What was being made?', class: 'form-label required'
        .form-info (for instance, sweater, socks, blanket, hat...)
        = form.text_area :description, size: "60x5", class: 'form-control'
    .row.mb-2
      .col-4
        = form.label 'Project Images', class: 'form-label required'
        .form-info Please upload photos of the unfinished project.
        = form.file_field :append_project_images, class: 'form-control', accept: "image/png,image/gif,image/jpeg,image/webp", :multiple => true
        - form.object.project_images.each do |image|
          = image_tag image.representation( resize_to_limit: [100, 100])
  .page-section
    %h5 Pattern
    .row.mb-2
      .col-2
        = form.label 'Is there a pattern', class: 'form-label required'
        = form.select :has_pattern, ['Yes', 'No', "I don't know"], { include_blank: true }, { class: 'form-select' }
    .row.mb-2
      .col-4
        = form.label 'Pattern Files', class: 'form-label'
        .form-info Please upload images or PDFs of the pattern, if you have them.
        = form.file_field :append_pattern_files, class: 'form-control', accept: "image/png,image/gif,image/jpeg,image/webp,application/pdf", :multiple => true
        - form.object.pattern_files.each do |file|
          - if file.representable?
            = link_to file.blob.filename, url_for(file)
  .page-section
    %h5 Material
    .row.mb-2
      .col-6
        = form.label 'What kind of yarn / material is used?', class: 'form-label required'
        .form-info Wool, Cotton, Linen, Synthetic (Nylon, Polyester, Acrylic, etc). Do you know?
        = form.text_field :material_type, class: 'form-control'
    .row.mb-2
      .col-4
        = form.label 'Material Images', class: 'form-label'
        .form-info Please upload a photo of the materials (yarn, fabric) used. Please be sure to include any labels and branding, if possible.
        = form.file_field :append_material_images, class: 'form-control', accept: "image/png,image/gif,image/jpeg,image/webp", :multiple => true
        - form.object.material_images.each do |image|
          = image_tag image.representation( resize_to_limit: [100, 100])
  .page-section
    %h5 The Crafter
    .row.mb-2
      .col-4
        = form.label 'Name of deceased or compromised crafter', class: 'form-label required'
        = form.text_field :crafter_name, class: 'form-control'
    .row.mb-2
      .col-6
        = form.label 'Please share a little bit about about the crafter who started this project, and your relationship with the person and the things they made.', class: 'form-label required'
        = form.text_area :crafter_description, size: "60x5", class: 'form-control'
    .row.mb-2
      .col-4
        = form.label 'Would you like to share a photo of the original crafter?', class: 'form-label'
        .form-info Please upload photos of the crafter, if you have them.
        = form.file_field :append_crafter_images, class: 'form-control', accept: "image/png,image/gif,image/jpeg,image/webp", :multiple => true
        - form.object.crafter_images.each do |image|
          = image_tag image.representation( resize_to_limit: [100, 100])
    .row.mb-2
      .col-4
        = form.label 'recipient_name', class: 'form-label'
        .form-info Who was this project being made for?
        = form.text_field :recipient_name, class: 'form-control'
  .row.mb-2
    .col-6
      = form.label 'Are there any other details you can offer, or anything else we should know about this project?', class: 'form-label'
      = form.text_area :more_details, size: "60x5", class: 'form-control'
  .row.mb-2
    .col-8
      .page-section
        %h5 Can we talk about this project?
        .form-info
          Sharing images of projects helps others understand what
          it's like to be a part of Loose Ends. Is it OK if we post photos of your project on our social media and online?
          All of your name and personal information would be kept private.
      = form.label 'can_publicize', class: 'form-label my-2' do
        = form.check_box :can_publicize
        It is OK to post about this project on the Internet and Social Media.
  - if !@project.persisted?
    .row.mb-2
      .col-8
        = form.label 'terms_of_use', class: 'form-label required'
        %label
          = form.check_box :terms_of_use
          By checking this box I hold harmless Loose Ends Project from any and all claims, lawsuits, demands, causes of action, liability, loss, damage, and/or injury of any kind.
  .form-actions
    = form.submit 'Submit Project', class: "btn btn-primary"

:javascript
  const prefixes = ['us', 'ca', 'ot']

  const selectButton = (selected) => {
      prefixes.forEach(p => {
          const button = document.querySelector('#' + p + 'Button')
          if (selected === p) {
              button.classList.add('active')
          } else {
              button.classList.remove('active')
          }
      })
  };

  const showState = (selected) => {
      prefixes.forEach(p => {
          const state = document.querySelector('#' + p + 'State')
          if (selected === p) {
              state.style.display = "block"
              state.querySelector('select, input').disabled = false;
          } else {
              state.style.display = "none"
              state.querySelector('select, input').disabled = true;
              state.querySelector('select, input').value = '';
          }
      })
  };

  const showCountry = (selected) => {
      const countryinput = document.querySelector('#project_country');
      const countryField = document.querySelector('#country_ui');
      if (selected === 'us') {
          countryinput.value = 'US';
          countryField.style.display = "none"
      } else if (selected === 'ca') {
          countryinput.value = 'CA';
          countryField.style.display = "none"
      } else {
          countryinput.value = '';
          countryField.style.display = "block"
      }
  }

  const setCountry = (val) => {
      if (prefixes.includes(val)) {
          selectButton(val);
          showState(val);
          showCountry(val);
      } else if (val) {
          setCountry('ot')
      } else {
          setCountry('us')
      }

  }
  document.addEventListener("turbo:load", () => {
      setCountry('#{@project.country.present? ? @project.country&.downcase : ''}')
  })
